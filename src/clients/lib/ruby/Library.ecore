import os

target="xmmsclient_ecore"
source=["rb_xmmsclient_ecore.c"]
static=False
loadable=True

def lib2sed(lib):
	return " -e 's/ -l" + lib + " / /'"

def ecorelib2sed(lib):
	return " -e 's/ -lecore_" + lib + " / /'"

def config(env):
	if env.tryaction ("ruby --version") :
		# we require ruby 1.8 or greater
		print "Checking for Ruby 1.8 or greater... ",

		version = env.run("ruby -e 'puts defined?(VERSION) ? VERSION : RUBY_VERSION'").strip()
		if not version or [int(a) for a in version.split(".")] < [1, 8] :
			print "no"
			raise ConfigError("")

		print version

		got_ruby_h = env.run("ruby -rrbconfig -e 'puts File.exist?(Config::CONFIG[\"archdir\"] + \"/ruby.h\")'").strip()
		if got_ruby_h != "true" :
			raise ConfigError("")

		cmd = "ruby -rrbconfig -e 'puts \"-I%s -L%s\" % [].fill(Config::CONFIG[\"archdir\"], 0..1)'"
		env.configcmd(cmd)
		if env.has_key("RUBYARCHDIR"):
			env.librarypath = env["RUBYARCHDIR"]
		else:
			cmd = "ruby -rrbconfig -e 'print Config::CONFIG[\"sitearchdir\"]'"
			env.librarypath = os.popen(cmd).read().strip()

		env.Prepend(LIBPATH="src/clients/lib/xmmsclient")
		env.Append(LIBS=["xmmsclient"])
		env["SHLIBPREFIX"]=''

		# duplicated ecore check from xmmsclient-ecore.
		# need to fix this the right way
		rem_ecore_libs = ['job', 'x', 'evas', 'con', 'ipc', 'txt', 'fb', 'config', 'file']
		rem_misc_libs = ['eet', 'jpeg', 'z']
		sed_call = 'sed ' + str.join(" ", [ecorelib2sed(a) for a in rem_ecore_libs]) + str.join(" ", [lib2sed(a) for a in rem_misc_libs])
		env.configcmd("ecore-config --libs --cflags | " + sed_call)
		env.Prepend(LIBPATH="src/clients/lib/xmmsclient-ecore")
		env.Append(LIBS=["xmmsclient-ecore"])
		return
	raise ConfigError("")
